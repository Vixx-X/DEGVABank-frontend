import Layout from '@components/Layout';
import Loader from '@components/common/Loader';
import Button from '@components/common/button/Button';
import EmailField from '@components/common/form/EmailField';
import PasswordField from '@components/common/form/PasswordField';
import HeaderTitle from '@components/header/HeaderTitle';

import { API_URLS } from '@config';

import { useFetchCallback } from '@hooks/useFetchCallback';

import Link from 'next/link';
import Router from 'next/router';
import { FormEvent, useState } from 'react';

const { URL_USER_REGISTER } = API_URLS;

interface RegisterFormData {
  email: string;
  password1: string;
  password2: string;
}

const Register = () => {
  const [form, setForm] = useState<RegisterFormData>({
    email: '',
    password1: '',
    password2: '',
  });
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState(false);
  const [messageError, setMessageError] = useState('');
  const Fetch = useFetchCallback();

  const handleChange = (e: FormEvent<HTMLInputElement>) => {
    const el = e.target as HTMLInputElement;
    setForm({
      ...form,
      [el.name]: el.value,
    });
  };

  const handleSubmit = async (e: FormEvent) => {
    e.preventDefault();
    setLoading(true);
    const options = {
      method: 'POST',
      body: JSON.stringify(form),
    };

    try {
      const [dataJson, ok] = await Fetch(URL_USER_REGISTER, options, false);
      if (ok) {
        Router.push('/user/login');
      } else {
        setMessageError(dataJson);
        setError(true);
      }
    } catch (error) {
      setError(true);
      setMessageError('Hay un error con la página');
    } finally {
      setLoading(false);
    }
  };

  if (loading) return <Loader />;

  return (
    <Layout
      title="Registro de Usuario"
      description="Registrate como usuario y disfruta de los beneficios y productos de SoloCarro"
    >
      <section className="my-12 ">
        <div className="container mx-auto animate__animated animate__fadeIn animate__delay-3s">
          <HeaderTitle title="Registro de Usuario" />

          <form method="POST" onSubmit={(e) => handleSubmit(e)}>
            <div className="flex flex-col items-center justify-center mb-20">
              <EmailField
                placeholder="Correo electrónico"
                name="email"
                onChange={handleChange}
                value={form.email}
              />

              <PasswordField
                placeholder="Contraseña"
                name="password1"
                onChange={handleChange}
                value={form.password1}
              />
              <PasswordField
                placeholder="Repite tu Contraseña"
                name="password2"
                onChange={handleChange}
                value={form.password2}
              />
              <div className="my-3 lg:my-3 font-normal text-base px-2 lg:w-96 lg:text-left">
                Al crear una cuenta estarás aceptando nuestras{' '}
                <Link href="/help/privacy-policy">
                  <a className="hover:underline">
                    politicas de privacidad y términos de uso.
                  </a>
                </Link>
              </div>

              <Button
                type="submit"
                className="bg-primary-new rounded-md py-3 text-white font-extrabold w-full lg:w-96 primary"
              >
                Crear cuenta
              </Button>

              {error ? (
                <div className="bg-red-400 border  border-red-700 w-96 p-3 my-3 py-3 rounded-lg text-sm font-normal">
                  <strong>Error: </strong> {messageError}
                </div>
              ) : null}
            </div>
          </form>
        </div>
      </section>
    </Layout>
  );
};

export default Register;
